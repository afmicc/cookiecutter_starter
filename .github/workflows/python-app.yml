name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:11.6-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - "5432:5432"
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Updating pip
      run: |
        python3 -m venv venv
        . venv/bin/activate
        pip install --upgrade pip==20.0.2

    - name: Cache pipenv
      uses: actions/cache@v2
      id: cache-venv
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('./requirements/base.txt','./requirements/local.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - name: Installing requirements
      run: |
        python3 -m venv venv
        . venv/bin/activate
        pip install -r ./requirements/local.txt
      # if: steps.cache-venv.outputs.cache-hit != 'true'

    - name: Checking PEP8 code style
      run: |
        . venv/bin/activate
        flake8 --count

    - name: Checking Black code formatter
      run: |
        . venv/bin/activate
        black . --check

    - name: Running tests
      run: |
        . venv/bin/activate
        coverage run -m pytest --ds=config.settings.test

    - name: Checking coverage
      run: |
        . venv/bin/activate
        coverage report --fail-under=90 -m
        coverage xml

    - name: Setup Code Climate test-reporter
      run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          ./cc-test-reporter after-build --coverage-input-type coverage.py --exit-code $?
