version: 2.1

jobs:
  build:
    docker:
      - image: circleci/python:latest
        environment:
          DATABASE_URL: postgresql://postgres:@localhost:5432/circle_test?sslmode=disable

      - image: circleci/postgres:alpine-postgis-ram

    steps:
      - checkout
      - run:
          name: Updating pip
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip==20.0.2

      - restore_cache:
          keys:
            - venv-requirements-{{ checksum "./requirements/base.txt" }}-{{ checksum "./requirements/local.txt" }}
            - venv-requirements-

      - run:
          name: Installing pip requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r ./requirements/local.txt

      - run:
          name: Checking PEP8 code style
          command: |
            . venv/bin/activate
            flake8 --count

      - run:
          name: Checking Black code formatter
          command: |
            . venv/bin/activate
            black . --check

      - run:
          name: Installing GDAL
          command: |
            sudo apt-get install libgdal-dev

      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            coverage run -m pytest --ds=config.settings.test

      - save_cache:
          key: venv-requirements-{{ checksum "./requirements/base.txt" }}-{{ checksum "./requirements/local.txt" }}
          paths:
            - ".venv"

      - run:
          name: Checking coverage
          command: |
            . venv/bin/activate
            coverage report --fail-under=90 -m
            coverage xml

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
            ./cc-test-reporter after-build --coverage-input-type coverage.py --exit-code $?
